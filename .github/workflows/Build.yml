name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


concurrency:
  # Cancel any CI/CD workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: cicd-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        platform: [windows-2019, ubuntu-20.04]
        configuration: [Debug, Release]

    runs-on: ${{matrix.platform}}
    env:
      BUILD_TYPE: ${{matrix.configuration}}

    steps:
    - uses: actions/checkout@v3

    - name: Install prerequisites
      if: matrix.platform == 'ubuntu-20.04'
      run: |
        sudo apt-get install -y libboost-dev libboost-filesystem-dev libboost-program-options-dev libbpf-dev

    - name: Cache nuget packages
      if: matrix.platform == 'windows-2019'
      uses: actions/cache@ac8075791e805656e71b4ba23325ace9e3421120
      env:
        cache-name: cache-nuget-modules
      with:
        path: build\packages
        key: ${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      if: matrix.platform == 'ubuntu-20.04'
      working-directory: ${{github.workspace}}
      run: |
        sudo build/src/bpf_conformance --test_file_path tests --plugin_path build/libbpf_plugin/libbpf_plugin --list_opcodes true