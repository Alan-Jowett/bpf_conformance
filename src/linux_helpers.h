// Copyright (c) Microsoft Corporation
// SPDX-License-Identifier: MIT
#include <map>
#include <string>

// This file was generated from bpf_helper_defs.h in the Linux kernel headers.

inline static std::map<std::string, uint32_t> linux_helper_functions = {
    {"bpf_map_lookup_elem", 1},
    {"bpf_map_update_elem", 2},
    {"bpf_map_delete_elem", 3},
    {"bpf_probe_read", 4},
    {"bpf_trace_printk", 6},
    {"bpf_skb_store_bytes", 9},
    {"bpf_l3_csum_replace", 10},
    {"bpf_l4_csum_replace", 11},
    {"bpf_tail_call", 12},
    {"bpf_clone_redirect", 13},
    {"bpf_get_current_comm", 16},
    {"bpf_skb_vlan_push", 18},
    {"bpf_skb_vlan_pop", 19},
    {"bpf_skb_get_tunnel_key", 20},
    {"bpf_skb_set_tunnel_key", 21},
    {"bpf_redirect", 23},
    {"bpf_perf_event_output", 25},
    {"bpf_skb_load_bytes", 26},
    {"bpf_get_stackid", 27},
    {"bpf_skb_get_tunnel_opt", 29},
    {"bpf_skb_set_tunnel_opt", 30},
    {"bpf_skb_change_proto", 31},
    {"bpf_skb_change_type", 32},
    {"bpf_skb_under_cgroup", 33},
    {"bpf_probe_write_user", 36},
    {"bpf_current_task_under_cgroup", 37},
    {"bpf_skb_change_tail", 38},
    {"bpf_skb_pull_data", 39},
    {"bpf_get_numa_node_id", 42},
    {"bpf_skb_change_head", 43},
    {"bpf_xdp_adjust_head", 44},
    {"bpf_probe_read_str", 45},
    {"bpf_set_hash", 48},
    {"bpf_setsockopt", 49},
    {"bpf_skb_adjust_room", 50},
    {"bpf_redirect_map", 51},
    {"bpf_sk_redirect_map", 52},
    {"bpf_sock_map_update", 53},
    {"bpf_xdp_adjust_meta", 54},
    {"bpf_perf_event_read_value", 55},
    {"bpf_perf_prog_read_value", 56},
    {"bpf_getsockopt", 57},
    {"bpf_override_return", 58},
    {"bpf_sock_ops_cb_flags_set", 59},
    {"bpf_msg_redirect_map", 60},
    {"bpf_msg_apply_bytes", 61},
    {"bpf_msg_cork_bytes", 62},
    {"bpf_msg_pull_data", 63},
    {"bpf_bind", 64},
    {"bpf_xdp_adjust_tail", 65},
    {"bpf_skb_get_xfrm_state", 66},
    {"bpf_get_stack", 67},
    {"bpf_skb_load_bytes_relative", 68},
    {"bpf_fib_lookup", 69},
    {"bpf_sock_hash_update", 70},
    {"bpf_msg_redirect_hash", 71},
    {"bpf_sk_redirect_hash", 72},
    {"bpf_lwt_push_encap", 73},
    {"bpf_lwt_seg6_store_bytes", 74},
    {"bpf_lwt_seg6_adjust_srh", 75},
    {"bpf_lwt_seg6_action", 76},
    {"bpf_rc_repeat", 77},
    {"bpf_rc_keydown", 78},
    {"bpf_sk_select_reuseport", 82},
    {"bpf_sk_release", 86},
    {"bpf_map_push_elem", 87},
    {"bpf_map_pop_elem", 88},
    {"bpf_map_peek_elem", 89},
    {"bpf_msg_push_data", 90},
    {"bpf_msg_pop_data", 91},
    {"bpf_rc_pointer_rel", 92},
    {"bpf_spin_lock", 93},
    {"bpf_spin_unlock", 94},
    {"bpf_skb_ecn_set_ce", 97},
    {"bpf_tcp_check_syncookie", 100},
    {"bpf_sysctl_get_name", 101},
    {"bpf_sysctl_get_current_value", 102},
    {"bpf_sysctl_get_new_value", 103},
    {"bpf_sysctl_set_new_value", 104},
    {"bpf_strtol", 105},
    {"bpf_strtoul", 106},
    {"bpf_sk_storage_delete", 108},
    {"bpf_send_signal", 109},
    {"bpf_skb_output", 111},
    {"bpf_probe_read_user", 112},
    {"bpf_probe_read_kernel", 113},
    {"bpf_probe_read_user_str", 114},
    {"bpf_probe_read_kernel_str", 115},
    {"bpf_tcp_send_ack", 116},
    {"bpf_send_signal_thread", 117},
    {"bpf_read_branch_records", 119},
    {"bpf_get_ns_current_pid_tgid", 120},
    {"bpf_xdp_output", 121},
    {"bpf_sk_assign", 124},
    {"bpf_seq_printf", 126},
    {"bpf_seq_write", 127},
    {"bpf_ringbuf_output", 130},
    {"bpf_csum_level", 135},
    {"bpf_get_task_stack", 141},
    {"bpf_load_hdr_opt", 142},
    {"bpf_store_hdr_opt", 143},
    {"bpf_reserve_hdr_opt", 144},
    {"bpf_d_path", 147},
    {"bpf_copy_from_user", 148},
    {"bpf_snprintf_btf", 149},
    {"bpf_seq_printf_btf", 150},
    {"bpf_redirect_neigh", 152},
    {"bpf_redirect_peer", 155},
    {"bpf_task_storage_delete", 157},
    {"bpf_bprm_opts_set", 159},
    {"bpf_ima_inode_hash", 161},
    {"bpf_check_mtu", 163},
    {"bpf_for_each_map_elem", 164},
    {"bpf_snprintf", 165},
    {"bpf_sys_bpf", 166},
    {"bpf_btf_find_by_name_kind", 167},
    {"bpf_sys_close", 168},
    {"bpf_timer_init", 169},
    {"bpf_timer_set_callback", 170},
    {"bpf_timer_start", 171},
    {"bpf_task_pt_regs", 175},
    {"bpf_timer_cancel", 172},
};